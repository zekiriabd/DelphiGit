// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 9/22/2017 7:21:51 AM (- $Rev: 12980 $, 254855015).

[
  uuid(79F110E7-5394-404C-83D7-661261C1D184),
  version(1.0),
  control

]
library Project2
{

  importlib("stdole2.tlb");

  interface IMainPage;
  dispinterface IMainPageEvents;
  coclass MainPage;


  [
    uuid(FE2F7378-3420-47D2-B5C1-AE218821129D)
  ]
  enum TxActiveFormBorderStyle
  {
    [helpstring("afbNone")]
    afbNone = 0,
    [helpstring("afbSingle")]
    afbSingle = 1,
    [helpstring("afbSunken")]
    afbSunken = 2,
    [helpstring("afbRaised")]
    afbRaised = 3
  };

  [
    uuid(90D1E944-821C-486A-A5C1-AC9AA285433D)
  ]
  enum TxPrintScale
  {
    [helpstring("poNone")]
    poNone = 0,
    [helpstring("poProportional")]
    poProportional = 1,
    [helpstring("poPrintToFit")]
    poPrintToFit = 2
  };

  [
    uuid(402CD5CE-4845-4FBF-A658-B002D0D204EC)
  ]
  enum TxMouseButton
  {
    [helpstring("mbLeft")]
    mbLeft = 0,
    [helpstring("mbRight")]
    mbRight = 1,
    [helpstring("mbMiddle")]
    mbMiddle = 2
  };

  [
    uuid(06DA1739-2140-44E7-974E-F687D7FFBB3D)
  ]
  enum TxPopupMode
  {
    [helpstring("pmNone")]
    pmNone = 0,
    [helpstring("pmAuto")]
    pmAuto = 1,
    [helpstring("pmExplicit")]
    pmExplicit = 2
  };

  [
    custom(8B342977-45CB-4A01-A8F2-E47B61F3539E, 0)
  ]
  typedef IFontDisp** PPUserType1;

  [
    uuid(290F1763-BBBA-4732-BA05-0C44460FAC16),
    helpstring("Dispatch interface for MainPage Control"),
    dual,
    oleautomation
  ]
  interface IMainPage: IDispatch
  {
    [propget, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([in] VARIANT_BOOL Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall AutoSize([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall AutoSize([in] VARIANT_BOOL Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([out, retval] enum TxActiveFormBorderStyle* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([in] enum TxActiveFormBorderStyle Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall BorderWidth([out, retval] long* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall BorderWidth([in] long Value);
    [propget, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([out, retval] BSTR* Value);
    [propput, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([in] BSTR Value);
    [propget, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([out, retval] OLE_COLOR* Value);
    [propput, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([in] OLE_COLOR Value);
    [propget, id(0xFFFFFE00)]
    HRESULT _stdcall Font([out, retval] IFontDisp** Value);
    [propput, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp* Value);
    [propputref, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp** Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall KeyPreview([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall KeyPreview([in] VARIANT_BOOL Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall PixelsPerInch([out, retval] long* Value);
    [propput, id(0x000000CF)]
    HRESULT _stdcall PixelsPerInch([in] long Value);
    [propget, id(0x000000D0)]
    HRESULT _stdcall PrintScale([out, retval] enum TxPrintScale* Value);
    [propput, id(0x000000D0)]
    HRESULT _stdcall PrintScale([in] enum TxPrintScale Value);
    [propget, id(0x000000D1)]
    HRESULT _stdcall Scaled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D1)]
    HRESULT _stdcall Scaled([in] VARIANT_BOOL Value);
    [propget, id(0x000000D2), hidden]
    HRESULT _stdcall Active([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000D3), hidden]
    HRESULT _stdcall DropTarget([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D3), hidden]
    HRESULT _stdcall DropTarget([in] VARIANT_BOOL Value);
    [propget, id(0x000000D4), hidden]
    HRESULT _stdcall HelpFile([out, retval] BSTR* Value);
    [propput, id(0x000000D4), hidden]
    HRESULT _stdcall HelpFile([in] BSTR Value);
    [propget, id(0x000000D5), hidden]
    HRESULT _stdcall PopupMode([out, retval] enum TxPopupMode* Value);
    [propput, id(0x000000D5), hidden]
    HRESULT _stdcall PopupMode([in] enum TxPopupMode Value);
    [propget, id(0x000000D6), hidden]
    HRESULT _stdcall ScreenSnap([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D6), hidden]
    HRESULT _stdcall ScreenSnap([in] VARIANT_BOOL Value);
    [propget, id(0x000000D7), hidden]
    HRESULT _stdcall SnapBuffer([out, retval] long* Value);
    [propput, id(0x000000D7), hidden]
    HRESULT _stdcall SnapBuffer([in] long Value);
    [propget, id(0x000000D8), hidden]
    HRESULT _stdcall DockSite([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D8), hidden]
    HRESULT _stdcall DockSite([in] VARIANT_BOOL Value);
    [propget, id(0x000000D9), hidden]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D9), hidden]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x000000DA), hidden]
    HRESULT _stdcall AlignDisabled([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000DB), hidden]
    HRESULT _stdcall MouseInClient([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000DC), hidden]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long* Value);
    [propget, id(0x000000DD), hidden]
    HRESULT _stdcall ParentDoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000DD), hidden]
    HRESULT _stdcall ParentDoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x000000DE), hidden]
    HRESULT _stdcall UseDockManager([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000DE), hidden]
    HRESULT _stdcall UseDockManager([in] VARIANT_BOOL Value);
    [propget, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x000000DF), hidden]
    HRESULT _stdcall ExplicitLeft([out, retval] long* Value);
    [propget, id(0x000000E0), hidden]
    HRESULT _stdcall ExplicitTop([out, retval] long* Value);
    [propget, id(0x000000E1), hidden]
    HRESULT _stdcall ExplicitWidth([out, retval] long* Value);
    [propget, id(0x000000E2), hidden]
    HRESULT _stdcall ExplicitHeight([out, retval] long* Value);
    [propget, id(0x000000E3)]
    HRESULT _stdcall AlignWithMargins([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000E3)]
    HRESULT _stdcall AlignWithMargins([in] VARIANT_BOOL Value);
    [propget, id(0x000000E4)]
    HRESULT _stdcall ParentCustomHint([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000E4)]
    HRESULT _stdcall ParentCustomHint([in] VARIANT_BOOL Value);
  };

  [
    uuid(B1B1C1D9-2500-4420-838A-DE7CFB7220CD),
    helpstring("Events interface for MainPage Control")
  ]
  dispinterface IMainPageEvents
  {
    properties:
    methods:
    [id(0x000000C9)]
    void OnActivate(void);
    [id(0x000000CA)]
    void OnAfterMonitorDpiChanged([in] long OldDPI, [in] long NewDPI);
    [id(0x000000CB)]
    void OnBeforeMonitorDpiChanged([in] long OldDPI, [in] long NewDPI);
    [id(0x000000CC)]
    void OnClick(void);
    [id(0x000000CD)]
    void OnCreate(void);
    [id(0x000000CE)]
    void OnDblClick(void);
    [id(0x000000CF)]
    void OnDestroy(void);
    [id(0x000000D0)]
    void OnDeactivate(void);
    [id(0x000000D1)]
    void OnKeyPress([in, out] short* Key);
    [id(0x000000D2)]
    void OnMouseEnter(void);
    [id(0x000000D3)]
    void OnMouseLeave(void);
    [id(0x000000D4)]
    void OnPaint(void);
  };

  [
    uuid(FCA67F15-EDD3-4ED4-A6A6-92BE4EB52952),
    helpstring("MainPage Control"),
    control
  ]
  coclass MainPage
  {
    [default] interface IMainPage;
    [default, source] dispinterface IMainPageEvents;
  };

};
